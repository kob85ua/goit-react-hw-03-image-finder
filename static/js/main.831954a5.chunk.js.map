{"version":3,"sources":["components/Searchbar.jsx","components/ImageGalleryItem.jsx","components/ImageGallery.jsx","components/Button.jsx","components/Loader.jsx","components/Modal.jsx","services/imagesApi.js","App.js","services/APIkey.js","index.js"],"names":["Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","tags","onModalOpen","key","src","alt","onClick","ImageGallery","images","map","Button","onLoadMore","LoaderBlock","color","height","width","timeout","Modal","largeImageURL","onCloseModal","fetchImagesWithQuery","searchQuery","page","APIkey","a","axios","get","response","data","hits","App","isLoading","error","showModal","find","scrollToWindow","window","scrollTo","top","document","documentElement","scrollHeight","behavior","urlForModal","openModal","eTarget","console","log","undefined","closeModal","fetchImages","imagesApi","then","prevState","catch","finally","handleSearchBarSubmit","query","prevProps","prevQuery","nextQuery","length","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.831954a5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: \"\",\n  };\n  handleChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ id, webformatURL, tags, onModalOpen }) => (\n  <li key={id} className=\"ImageGalleryItem\">\n    <img\n      src={webformatURL}\n      alt={tags}\n      className=\"ImageGalleryItem-image\"\n      onClick={onModalOpen}\n    />\n  </li>\n);\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nconst ImageGallery = ({ images, onModalOpen }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(({ id, webformatURL, tags }) => (\n      <ImageGalleryItem\n        id={id}\n        webformatURL={webformatURL}\n        tags={tags}\n        onModalOpen={onModalOpen}\n      ></ImageGalleryItem>\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n","import React from \"react\";\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button onClick={onLoadMore} className=\"Button\">\n      Load more\n    </button>\n  );\n};\nexport default Button;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nexport default class LoaderBlock extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"Puff\"\n        color=\"#3f51b5\"\n        height={150}\n        width={150}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import React from \"react\";\n\nconst Modal = ({ largeImageURL, onCloseModal }) => {\n  return (\n    <div className=\"Overlay\" onClick={onCloseModal}>\n      <div className=\"Modal\">\n        <img src={largeImageURL} alt=\"Modal\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import axios from \"axios\";\n\nconst fetchImagesWithQuery = async (searchQuery, page, APIkey) => {\n  const response = await axios.get(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n  return response.data.hits;\n};\n\nexport default {\n  fetchImagesWithQuery,\n};\n","import React, { Component } from \"react\";\n\nimport \"./components/styles.css\";\n\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport LoaderBlock from \"./components/Loader\";\nimport Modal from \"./components/Modal\";\n\nimport APIkey from \"./services/APIkey\";\nimport imagesApi from \"./services/imagesApi\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    showModal: false,\n    find:\"\"\n  };\n  componentDidMount() {\n    // this.setState({ isLoading: true });\n    // articlesApi.fetchArticlesWithQuery(this.state.query, APIkey).then(images=>this.setState({images}))\n    // .catch((error) => this.setState({ error }))\n    // .finally(() => this.setState({ isLoading: false }));\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n    if (prevQuery.length !== nextQuery.length) {\n      console.log(\"SCROLL\");\n      this.scrollToWindow();\n    }\n    if (prevState.find !==this.state.find) {\n\n    }\n  }\n  scrollToWindow = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n  urlForModal= ()=> {\n    return this.state.find\n  }\n  openModal = (e, eTarget) => {\n    console.log(eTarget)\n    if (eTarget !== undefined) {\n      this.setState({ showModal: true });\n      this.setState (state=>({find: state.images.find(\n        ({ webformatURL }) => webformatURL === eTarget.src\n      ).largeImageURL}));\n    }\n  };\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoading: true });\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page, APIkey)\n      .then((images) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleSearchBarSubmit = (query) => {\n    this.setState({ searchQuery: query, page: 1, images: [] });\n  };\n  render() {\n    const { isLoading, images, error, showModal} = this.state;\n    const urlForModal = this.urlForModal();\n    // console.log(urlForModal)\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSearchBarSubmit}> </Searchbar>\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\n        {isLoading && <LoaderBlock></LoaderBlock>}\n        {images.length > 0 && (\n          <ImageGallery images={images} onModalOpen={(e)=>this.openModal(e, e.target)} />\n        )}\n        {showModal && (\n          <Modal onCloseModal={this.closeModal} largeImageURL={urlForModal}></Modal>\n        )}\n        {images.length > 0 && !isLoading && (\n          <Button onLoadMore={this.fetchImages}>Load more</Button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const APIkey = \"17820819-7325a21fc26dbd04468dfd17d\";\nexport default APIkey;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}